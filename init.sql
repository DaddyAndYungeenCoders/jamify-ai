/*
 * Copyright (c) 2024, LAPETITTE Matthieu
 * Tous droits rÃ©servÃ©s.
 *
 * Ce fichier est soumis aux termes de la licence suivante :
 * Vous Ãªtes autorisÃ© Ã  utiliser, modifier et distribuer ce code sous rÃ©serve des conditions de la licence.
 * Vous ne pouvez pas utiliser ce code Ã  des fins commerciales sans autorisation prÃ©alable.
 *
 * Ce fichier est fourni "tel quel", sans garantie d'aucune sorte, expresse ou implicite, y compris mais sans s'y limiter,
 * les garanties implicites de qualitÃ© marchande ou d'adaptation Ã  un usage particulier.
 *
 * Pour toute question ou demande d'autorisation, contactez LAPETITTE Matthieu Ã  l'adresse suivante :
 * matthieu@lapetitte.fr
 */

/*
 * Copyright (c) 2024, LAPETITTE Matthieu
 * Tous droits rÃ©servÃ©s.
 *
 * Ce fichier est soumis aux termes de la licence suivante :
 * Vous Ãªtes autorisÃ© Ã  utiliser, modifier et distribuer ce code sous rÃ©serve des conditions de la licence.
 * Vous ne pouvez pas utiliser ce code Ã  des fins commerciales sans autorisation prÃ©alable.
 *
 * Ce fichier est fourni "tel quel", sans garantie d'aucune sorte, expresse ou implicite, y compris mais sans s'y limiter,
 * les garanties implicites de qualitÃ© marchande ou d'adaptation Ã  un usage particulier.
 *
 * Pour toute question ou demande d'autorisation, contactez LAPETITTE Matthieu Ã  l'adresse suivante :
 * matthieu@lapetitte.fr
 */

create table engine.public.jam
(
    jam_id              bigint generated by default as identity
        primary key,
    host_id             bigint,
    jam_name            varchar(255),
    jam_scheduled_start timestamp(6),
    jam_status          varchar(255)
        constraint jam_jam_status_check
            check ((jam_status)::text = ANY
                   ((ARRAY ['RUNNING'::character varying, 'PAUSED'::character varying, 'STOPPED'::character varying, 'SCHEDULED'::character varying, 'CANCELED'::character varying])::text[]))
);

create table engine.public.music
(
    music_id        bigint generated by default as identity
        primary key,
    music_author    varchar(255),
    music_energy    varchar(255),
    music_image_src varchar(255),
    music_isrc      varchar(255),
    music_tempo     varchar(255),
    music_title     varchar(255)
);


create table engine.public.tag
(
    tag_id    bigint generated by default as identity
        primary key,
    tag_label varchar(255)
);


create table engine.public.jam_tags
(
    jam_id bigint not null
        constraint fk6nxe8l2adoh1k1f7w0y9cg7ss
            references jam,
    tag_id bigint not null
        constraint fk9fwkv532ho3l496ggxwxl51wn
            references tag,
    primary key (jam_id, tag_id)
);


create table engine.public.music_tag
(
    music_id bigint not null
        constraint fk130nenp61ci8smsrxvt19x6r5
            references music,
    tag_id   bigint not null
        constraint fk63e5vc8dejj3aidknm736v76q
            references tag,
    primary key (music_id, tag_id)
);


create table engine.public.users
(
    user_id              bigint generated by default as identity
        primary key,
    user_country         varchar(255),
    user_email           varchar(255),
    user_has_jam_running boolean,
    user_img_url         varchar(1024),
    user_name            varchar(255),
    user_provider        varchar(255),
    user_provider_id     varchar(255),
    jam_id               bigint
        constraint fkrck4spc7lyo2x0859i4vtso39
            references jam
);


create table engine.public.event
(
    event_id        bigint generated by default as identity
        primary key,
    city            varchar(255),
    country         varchar(255),
    state           varchar(255),
    street          varchar(255),
    zip_code        varchar(255),
    name            varchar(255),
    scheduled_start timestamp(6),
    status          varchar(255)
        constraint event_status_check
            check ((status)::text = ANY
                   ((ARRAY ['SCHEDULED'::character varying, 'CANCELLED'::character varying, 'STARTED'::character varying, 'FINISHED'::character varying])::text[])),
    host_user_id    bigint
        constraint fkornquppgm2jansrowvhfxa1bd
            references users
);


create table engine.public.event_participants
(
    user_id  bigint not null
        constraint fkre6m0d4mgt4351tytlkac9jvf
            references users,
    event_id bigint not null
        constraint fk5232w1ta0icpkemgsxyw8a976
            references event,
    primary key (user_id, event_id)
);


alter table engine.public.jam
    add constraint fkkqcb6hoirf4kyjw67v0xskgxo
        foreign key (host_id) references users;

create table engine.public.jam_message
(
    jam_message_id        bigint generated by default as identity
        primary key,
    jam_message_content   varchar(255),
    jam_message_timestamp timestamp(6),
    user_id               bigint
        constraint fk8v26yavj9o6joj47x1syewm79
            references users,
    jam_id                bigint
        constraint fkep5f1d01wnbpadeujs5815uuo
            references jam
);


create table engine.public.jam_participant
(
    jam_id  bigint not null
        constraint fktlkjpl2vd7vmkqqfhj9o9nj63
            references jam,
    user_id bigint not null
        constraint fk8tc26td12bcoum2uiva45nn4e
            references users,
    primary key (jam_id, user_id)
);


create table engine.public.playlist
(
    playlist_id          bigint generated by default as identity
        primary key,
    playlist_like_number integer,
    playlist_name        varchar(255),
    author_id            bigint
        constraint fk9v9685q5sbpux27ful5s6scw9
            references users
);


create table engine.public.playlist_music
(
    playlist_id bigint not null
        constraint fkq9o07ljjk03aeeqt0q9lwhndk
            references playlist,
    music_id    bigint not null
        constraint fk5g0xtl5e89uycye0jo1ll65sq
            references music,
    primary key (playlist_id, music_id)
);


create table engine.public.user_access_tokens
(
    id           bigint generated by default as identity
        primary key,
    access_token varchar(512),
    expires_at   timestamp(6),
    provider     varchar(255),
    user_user_id bigint
        constraint ukqdpottgytc1007lm3v5vds8vv
            unique
        constraint fkkx2jt8sec0y6m2uwmvadqmf19
            references users
);


create table engine.public.user_roles
(
    user_id   bigint not null
        constraint fkhfh9dx7w3ubf1co1vdev94g3f
            references users,
    user_role varchar(255)
);


Ap0g
ap0g
En ligne

Ap0g â€” Aujourdâ€™hui Ã  10:02
Sandro vient de me donner le nom des queues que je dois utiliser pour consommer et envoyer
Ap0g â€” Aujourdâ€™hui Ã  10:18
active mq est pas intÃ©grÃ© Ã  l'appli ?
tu le lances comment ton active mq ?
Spiti â€” Aujourdâ€™hui Ã  10:18
Bahhh
moi j'utilise le docker compose
comme pour la lecture des tag, j'utilise la base de donnÃ©e
Ap0g â€” Aujourdâ€™hui Ã  10:19
ah tu fais pas le run.py ?
Spiti â€” Aujourdâ€™hui Ã  10:19
non, je lance le docker compose
Ap0g â€” Aujourdâ€™hui Ã  10:19
ok je vais faire Ã§a
Spiti â€” Aujourdâ€™hui Ã  10:19
active mq est un logiciel a part
et la base de donnÃ©es aussi
Ap0g â€” Aujourdâ€™hui Ã  10:20
ouais mais qui est lancÃ© via le docker compose non
Spiti â€” Aujourdâ€™hui Ã  10:20
c'est sa
et au final, le python aussi
sa permet plus de stabilitÃ© dans les environment
Ap0g â€” Aujourdâ€™hui Ã  10:24
=> ERROR [web  6/10] COPY ./models /repo/models
t'as pas oubliÃ© de push un dossier ?
Spiti â€” Aujourdâ€™hui Ã  10:25
retire la ligne du docker file ðŸ˜…
elle est devenu obsolete
mais je ne l'ai pas remarquÃ© car le fichier existe en local mais on ne peut pas push un dossier vide
Ap0g â€” Aujourdâ€™hui Ã  10:26
Ã§a marche bg
Spiti â€” Aujourdâ€™hui Ã  10:27
une fois lancÃ©, tu a un accÃ¨s a activemq en localhost:8161 avec admin admin en identifiant et mdp. Tu peut ajoutÃ© des elements a la queue depuis cette endroit et voir les queue et leurs contenue
Ap0g â€” Aujourdâ€™hui Ã  10:29
ok et pour lancer l'appli tu lances le run.py ?
Spiti â€” Aujourdâ€™hui Ã  10:29
elle est automatiquement lancÃ©
il y a un contenueur avec l'appli
elle sappel web
Ap0g â€” Aujourdâ€™hui Ã  10:31
ok bon dÃ©jÃ  j'ai bien accÃ¨s au activemq
tes listeners c'est dans data service ?
Spiti â€” Aujourdâ€™hui Ã  10:38
dans le init de dans le fichier servic
et la fonction listen est bien dans data service
Ap0g â€” Aujourdâ€™hui Ã  10:39
ok je peux juste rajouter une ligne add subscriber dans ta fonction du coup ?
par besoin que je me refasse une fonction
Spiti â€” Aujourdâ€™hui Ã  10:41
oui, si tu a une fonction de listener qui prend les donnÃ©e brut de le queue dans le service 
Ap0g â€” Aujourdâ€™hui Ã  10:43
okay
Spiti â€” Aujourdâ€™hui Ã  10:49
J'ai corriger un de tes test mais le resultat du second est particulier :
Image
comment sa heureux est pareil que triste ?
Ap0g â€” Aujourdâ€™hui Ã  11:06
trÃ¨s bonne question
il envoie quoi en tag ? 
Spiti â€” Aujourdâ€™hui Ã  11:09
le tag envoyer est happy et la music retournÃ© a le tag sad
similaritÃ© a 0.6
Ap0g â€” Aujourdâ€™hui Ã  11:09
je regarde Ã§a dÃ¨s que j'ai fini avec les queues
d'ailleurs comment je peux tester ? je sais pas trop comment gÃ©rÃ© l'appli depuis le docker et poster des messages dans active
Spiti â€” Aujourdâ€™hui Ã  11:11
J'ai fait des mock pour cela
Ap0g â€” Aujourdâ€™hui Ã  11:17
c'est Ã  dire
je veux pas dire le jeu de donnÃ©e mais juste comment je trigger ma fonction quoi
Spiti â€” Aujourdâ€™hui Ã  11:22
dans le active mq
Image
tu va avoir un bouton send et un menu send en haut
et sur docker tu a un container qui doit sappeler jamify-ai-web qui a les logs du python
Ap0g â€” Aujourdâ€™hui Ã  11:24
ok je vais tester Ã§a, merci
Spiti â€” Aujourdâ€™hui Ã  11:47
https://github.com/DaddyAndYungeenCoders/jamify-ai/blob/develop/app/services/__init__.py
Ap0g â€” Aujourdâ€™hui Ã  16:10
{
    "id": "123e4567-e89b-12d3-a456-426614174000",
    "userId": 42,
    "data": {
        "tags": ["energy"],
        "name": "My Playlist",
        "description": "A mix of my favorite genres."
    }
}
Spiti â€” Aujourdâ€™hui Ã  16:38


INSERT INTO public.tag (tag_id, tag_label) VALUES (1, 'Happy');
INSERT INTO public.tag (tag_id, tag_label) VALUES (2, 'Relax');
INSERT INTO public.tag (tag_id, tag_label) VALUES (4, 'Love');
INSERT INTO public.tag (tag_id, tag_label) VALUES (5, 'Angry');
INSERT INTO public.tag (tag_id, tag_label) VALUES (6, 'Motivating');
INSERT INTO public.tag (tag_id, tag_label) VALUES (7, 'Dark');
INSERT INTO public.tag (tag_id, tag_label) VALUES (8, 'Energetic');
INSERT INTO public.tag (tag_id, tag_label) VALUES (9, 'Festive');
INSERT INTO public.tag (tag_id, tag_label) VALUES (10, 'Sad');


INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (1, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/1e236f9ce35497f1daf72bf24ef356f71e3c0a91?cid=529623fe55c9470c9267eb399357c9d2', 'DEAR41183102', 'None', 'Break It - Original');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (2, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/803b352a2b4c1fe6b79c5efa8b5c87edc40fe750?cid=529623fe55c9470c9267eb399357c9d2', 'GBKQU1346823', 'None', 'Cassiopeia - DefTunez Remix');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (3, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/a4620f2acb0627d5afce13daff2edb5b09ada472?cid=529623fe55c9470c9267eb399357c9d2', 'DEAR42258144', 'None', 'All Night Long - Extended');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (4, 'Westside Gunn', '0.475', null, null, '73.911', 'Big AL (feat. Rome Streetz)');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (5, 'Michael Jackson', '0.701', null, null, '124.047', 'Blue Gangsta');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (6, 'Stacey Kent', '0.233', null, null, '88.099', 'Au coin du monde');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (7, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/11a5bef9830bfa7dee5527c800a48ece13870d78?cid=529623fe55c9470c9267eb399357c9d2', 'US83Z2044532', 'None', 'Jupiter''s Moon - EDLands Remix');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (8, 'Soundgarden', '0.819', null, null, '131.154', 'Birth Ritual');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (9, 'Jimmy Buffett', '0.8', null, null, '105.711', 'Back to the Island');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (10, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/abff25e42acb7aeb4cc9f33b16833ac3b98abb2f?cid=529623fe55c9470c9267eb399357c9d2', 'DEBW21900209', 'None', 'Flamingo Ride');


INSERT INTO public.music_tag (music_id, tag_id) VALUES (2, 5);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (3, 7);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (4, 2);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (5, 9);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (6, 1);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (7, 4);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (8, 6);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (9, 10);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (10, 8);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (1, 6);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (2, 4);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (3, 1);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (4, 9);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (6, 8);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (7, 10);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (8, 2);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (9, 5);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (10, 7);
RÃ©duire
message.txt
5 Ko
Spiti â€” Aujourdâ€™hui Ã  17:27
tu l'a merge les get request on queue ?
ï»¿


INSERT INTO public.tag (tag_id, tag_label) VALUES (1, 'Happy');
INSERT INTO public.tag (tag_id, tag_label) VALUES (2, 'Relax');
INSERT INTO public.tag (tag_id, tag_label) VALUES (4, 'Love');
INSERT INTO public.tag (tag_id, tag_label) VALUES (5, 'Angry');
INSERT INTO public.tag (tag_id, tag_label) VALUES (6, 'Motivating');
INSERT INTO public.tag (tag_id, tag_label) VALUES (7, 'Dark');
INSERT INTO public.tag (tag_id, tag_label) VALUES (8, 'Energetic');
INSERT INTO public.tag (tag_id, tag_label) VALUES (9, 'Festive');
INSERT INTO public.tag (tag_id, tag_label) VALUES (10, 'Sad');


INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (1, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/1e236f9ce35497f1daf72bf24ef356f71e3c0a91?cid=529623fe55c9470c9267eb399357c9d2', 'DEAR41183102', 'None', 'Break It - Original');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (2, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/803b352a2b4c1fe6b79c5efa8b5c87edc40fe750?cid=529623fe55c9470c9267eb399357c9d2', 'GBKQU1346823', 'None', 'Cassiopeia - DefTunez Remix');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (3, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/a4620f2acb0627d5afce13daff2edb5b09ada472?cid=529623fe55c9470c9267eb399357c9d2', 'DEAR42258144', 'None', 'All Night Long - Extended');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (4, 'Westside Gunn', '0.475', null, null, '73.911', 'Big AL (feat. Rome Streetz)');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (5, 'Michael Jackson', '0.701', null, null, '124.047', 'Blue Gangsta');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (6, 'Stacey Kent', '0.233', null, null, '88.099', 'Au coin du monde');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (7, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/11a5bef9830bfa7dee5527c800a48ece13870d78?cid=529623fe55c9470c9267eb399357c9d2', 'US83Z2044532', 'None', 'Jupiter''s Moon - EDLands Remix');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (8, 'Soundgarden', '0.819', null, null, '131.154', 'Birth Ritual');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (9, 'Jimmy Buffett', '0.8', null, null, '105.711', 'Back to the Island');
INSERT INTO public.music (music_id, music_author, music_energy, music_image_src, music_isrc, music_tempo, music_title) VALUES (10, 'unknown', 'None', 'https://p.scdn.co/mp3-preview/abff25e42acb7aeb4cc9f33b16833ac3b98abb2f?cid=529623fe55c9470c9267eb399357c9d2', 'DEBW21900209', 'None', 'Flamingo Ride');


INSERT INTO public.music_tag (music_id, tag_id) VALUES (2, 5);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (3, 7);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (4, 2);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (5, 9);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (6, 1);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (7, 4);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (8, 6);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (9, 10);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (10, 8);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (1, 6);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (2, 4);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (3, 1);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (4, 9);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (6, 8);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (7, 10);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (8, 2);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (9, 5);
INSERT INTO public.music_tag (music_id, tag_id) VALUES (10, 7);